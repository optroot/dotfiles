#! header

snippet #! "Shebang header for python scripts" b
#!/usr/bin/python
$0
endsnippet

snippet #utf8 "UTF8 support" b
# -*- encoding: utf-8 -*-
$0
endsnippet

snippet ifn "if name" b
if __name__ == '__main__':

	${1:${VISUAL:main()}}
endsnippet

snippet name "if name" b
if __name__ == '__main__':

	${1:${VISUAL:main()}}
endsnippet

snippet ifname "if name" b
if __name__ == '__main__':

	${1:${VISUAL:main()}}
endsnippet

snippet for "for loop" b
for ${1:item} in ${2:iterable}:
	${3:${VISUAL:pass}}
endsnippet

snippet class "class with docstrings" b
class ${1:MyClass}(${2:object}):

	def __init__(self$3):
		`!p
snip >> 2
args = [arg.split('=')[0].strip() for arg in t[3].split(',') if arg]
args = [arg for arg in args if arg != 'self']
for arg in args:
	snip += "self._%s = %s" % (arg, arg)
`
		$0
endsnippet

snippet def "function" b
def ${1:function}(`!p
if snip.indent:
	snip.rv = 'self' + (", " if len(t[2]) else "")`${2:arg1}):
	${5:${VISUAL:pass}}
endsnippet

# doesn't expand when there is a word in front
snippet /(^|(?<=\W))\./ "self." r
self.
endsnippet

snippet if "If" b
if ${1:condition}:
	${2:${VISUAL:pass}}
endsnippet

snippet try "Try / Except" b
try:
	${1:${VISUAL:pass}}
except ${2:Exception} as ${3:e}:
	${4:raise $3}
endsnippet

# vim:ft=snippets:
